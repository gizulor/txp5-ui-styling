$break0: 480px;
$break1: 720px;
$break2: 960px;
$break3: 1280px;


body {
  --vmeasure: 15vh;
  @media (orientation: portrait) {
    display: grid;
    grid-gap: var(--base-unit);
    grid-template-columns:  1fr 1fr;
    align-content: start;
    padding: 0 var(--base-unit--s);

    grid-template-areas: 'header header'
      'heading message'
      'save save'
      //'actions actions'
      'support support'
      'pane pane'
      'custom custom'
      'image image'
      '. .'
      'recent extras'
      'footer footer'
    ;
  }

  @media (orientation: portrait) and (min-width: $break0) {
    padding: 0 var(--base-unit);
  }

  @media (orientation: landscape) {
    display: grid;
    gap: var(--base-unit);
    grid-template-columns: 14ch 1fr;
    grid-template-areas: 'header message'
      'header heading'
      'header support'
      'header pane'
      'header footer'
    ;
    padding-inline-end: var(--base-unit);
    width: 100%;
  }

  @media (orientation: landscape) and (min-width: $break1) {
    grid-template-columns: 14ch auto 1fr;
    grid-template-areas: 'header message message'
      'header heading heading'
      'header support pane'
      'header footer footer'
    ;
    grid-template-rows: auto 15vh auto;
  }

  @media (orientation: landscape) and (min-width: $break2) {
    grid-template-columns: 14ch 18ch 1fr 1fr;
    grid-template-areas: 'header message message message'
      'header heading heading heading'
      'header support title author'
      'header support body excerpt'
      'header support . .'
      'header footer footer footer'
    ;
  }

  @media (orientation: landscape) and (min-width: $break3) {
    grid-template-columns: 14ch 24ch 1fr 1fr;
    gap: var(--base-unit) var(--base-unit--b);
  }
}


.hoz-scroll {
  @media (orientation: portrait) {
    display: grid;
    width: calc(100% + var(--base-unit));
    margin-left: calc(var(--base-unit--s) *-1);
    grid-gap: calc(var(--base-unit--s) / 2);
    grid-template-columns: var(--base-unit--s);
    grid-auto-flow: column;
    grid-auto-columns: calc(30ch - var(--base-unit--s) * 2);
    overflow-x: scroll;
    scroll-snap-type: x proximity;
    padding: var(--base-unit--s);

    &:before,
    &:after {
      content: '';
      width: var(--base-unit--s);
    }
  }
  @media (orientation: portrait) and (min-width: $break0) {
    width: calc(100% + var(--base-unit--b));
    margin-left: calc(var(--base-unit) *-1);
  }
}





.txp-header {
  grid-area: header;
}

.messagepane {
  grid-area: message;
}

.txp-heading {
  grid-area: heading;
}

.txp-footer {
  grid-area: footer;
  margin-top: var(--vmeasure);
  padding: var(--base-unit) 0;
  border-top: var(--border-width) solid var(--clr-text);
}